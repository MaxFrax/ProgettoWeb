CREATE TABLE app.USER_DETAIL(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	NAME VARCHAR (100) NOT NULL,
	LASTNAME VARCHAR (100) NOT NULL,
	USERNAME VARCHAR (100) NOT NULL,
	EMAIL VARCHAR(255) NOT NULL,
	HASH_PASSWORD CHAR(64) NOT NULL,
	HASH_SALT CHAR(64) NOT NULL,
	USER_TYPE SMALLINT NOT NULL, --('REGISTERED', 'SELLER', 'ADMINISTRATOR')
	PRIMARY KEY(ID),
	UNIQUE(EMAIL),
	UNIQUE(USERNAME)
);

CREATE TABLE app.SHOP(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(255),
	WEBSITE VARCHAR(255),
	RATING INTEGER CHECK(RATING >= 0 AND RATING <= 5),
	OWNER_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(OWNER_ID) REFERENCES app.USER_DETAIL(ID)
);

CREATE TABLE app.RETAILER(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	LATITUDE FLOAT NOT NULL,
	LONGITUDE FLOAT NOT NULL,
	POSTAL_CODE INTEGER NOT NULL,
	CITY VARCHAR(50) NOT NULL,
	STREET_NAME VARCHAR(100) NOT NULL,
	STREET_NUMBER INT,
	PROVINCE VARCHAR(50) NOT NULL,
	OPEN_TIMETABLE LONG VARCHAR,
	SHOP_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(SHOP_ID) REFERENCES app.SHOP(ID)
);

CREATE TABLE app.CATEGORY(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	NAME VARCHAR(100) NOT NULL,
	PRIMARY KEY(ID)
);

CREATE TABLE app.ITEM(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(255),
	PRICE FLOAT NOT NULL,
	SELLER_ID INTEGER NOT NULL,
	CATEGORY_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(CATEGORY_ID) REFERENCES app.CATEGORY(ID),
	FOREIGN KEY(SELLER_ID) REFERENCES app.SHOP(ID)
);

CREATE TABLE app.REVIEW(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	DESCRIPTION LONG VARCHAR NOT NULL,
	RATING INTEGER CHECK(RATING >= 0 AND RATING <= 5),
	ITEM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(ITEM_ID) REFERENCES app.ITEM(ID),
	FOREIGN KEY(USER_ID) REFERENCES app.USER_DETAIL(ID)	
);

CREATE TABLE app.PHOTO(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	LINK VARCHAR(255),
	ITEM_ID INTEGER,
	SHOP_ID INTEGER,
	PRIMARY KEY(ID),
	FOREIGN KEY(ITEM_ID) REFERENCES app.ITEM(ID),
	FOREIGN KEY(SHOP_ID) REFERENCES app.SHOP(ID)
);

CREATE TABLE app.PURCHASE(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	ITEM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(ITEM_ID) REFERENCES app.ITEM(ID),
	FOREIGN KEY(USER_ID) REFERENCES app.USER_DETAIL(ID)
);

CREATE TABLE app.ISSUE(
	ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	USER_DESCRIPTION LONG VARCHAR NOT NULL,
	ADMIN_CHOICE SMALLINT NOT NULL, --('REFUND', 'DO_NOTHING', 'BAD_REVIEW', 'NOT_VALID')
	PURCHASE_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(PURCHASE_ID) REFERENCES app.PURCHASE(ID)
);